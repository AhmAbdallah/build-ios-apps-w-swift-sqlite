func replace(){        let index:Int32 = 1        let name:String = "kevin"        let Dbl:Double = 1000.99        var dbPath:URL = URL();               let dirManager = FileManager.default()        do {            let directoryURL = try dirManager.urlForDirectory(FileManager.SearchPathDirectory.documentDirectory, in: FileManager.SearchPathDomainMask.userDomainMask, appropriateFor: nil, create: true)                        dbPath = directoryURL.urlByAppendingPathComponent("database.sqlite")            if( sqlite3_open(dbPath.absoluteString?.cString(using: String.Encoding.utf8)!,&sqlite3_db) == 0){                let sql:String = "INSERT OR REPLACE INTO schema.simpletable (id, name, colDouble)VALUES(\(index),\(name.cString(using: String.Encoding.utf8)), \(Dbl))‚Äù                                if(sqlite3_prepare_v2(sqlite3_db, sql.cString(using: String.Encoding.utf8)!, -1, &sqlite3_stmt, nil) != SQLITE_OK)                {                    print("Problem with prepare statement")                                    }else{                    sqlite3_finalize(sqlite3_stmt);                    sqlite3_close(sqlite3_db);                }            }                    } catch let err as NSError {            print("Error: \(err.domain)")        }    }