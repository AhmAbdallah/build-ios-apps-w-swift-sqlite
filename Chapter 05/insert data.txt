INSERT into main.table VALUES(values list items)INSERT INTO main.table	SELECT * FROM main.otherTable WHERE clauseINSERT INTO main.table	SELECT column list FROM main.otherTable (with or without WHERE clause)INSERT INTO main.table(column list)	SELECT column list FROM main.otherTable (with or without WHERE clause)
internal let SQLITE_STATIC = unsafeBitCast(0, to: sqlite3_destructor_type.self)internal let SQLITE_TRANSIENT = unsafeBitCast(-1, to: sqlite3_destructor_type.self)func sample(){            var sqlite3_stmt:COpaquePointer?=nil;        var sqlite3_db:COpaquePointe?r=nil;        var txt:String = "some text";        let integer:Int32 = 500;        let dbl:Double = 10.45;        var dbPath:URL = URL()var sqlStatement:COpaquePointer?=nil        var dbErr: UnsafeMutablePointer<UnsafeMutablePointer<Int8>>? = nil        var errmsg:String=""        let dbName = "winery.sqlite"         //insert query        let sql:String = "INSERT INTO table(coltext, colint, coldouble) VALUES(?,?,?)";                let dirManager = FileManager.default()        //Open db assuming there is no sub folders        do {            let documentDirectoryURL = try dirManager.urlForDirectory(FileManager.SearchPathDirectory.documentDirectory, in: FileManager.SearchPathDomainMask.userDomainMask, appropriateFor: nil, create: true)                        dbPath = documentDirectoryURL.urlLByAppendingPathComponent(dbName)        } catch let err as NSError {            print("Error: \(err.domain)")        }                        sqlite3_open(dbPath.path!, &sqlite3_db);        sqlite3_prepare_v2(sqlite3_db, sql, 1, &sqlite3_stmt, nil);        sqlite3_bind_text(sqlite3_stmt, 1, txt.cString(using: String.encoding.ut)!, -1, SQLITE_TRANSIENT);        sqlite3_bind_int(sqlite3_stmt, 2, integer);        sqlite3_bind_double(sqlite3_stmt, 3, dbl);        sqlite3_step(sqlite3_stmt);        sqlite3_finalize(sqlite3_stmt);        sqlite3_close(sqlite3_db);        }