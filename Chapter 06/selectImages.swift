    func selectImages(_ filename:String)->Array<UIImage>{        var imageArr = [UIImage]()                        if(!(sqlite3_open(dbPath.path!, &db) == SQLITE_OK))        {            print("An error has occured.");            return imageArr;        }else{            let sql:String = "SELECT id, filename, image FROM images where filename=?";            if(sqlite3_prepare(db, sql, -1, &sqlStatement, nil) != SQLITE_OK)            {                print("Problem with prepare statement");            }else{                //WHERE parameter value                sqlite3_bind_text(sqlStatement, 1,filename, -1,SQLITE_TRANSIENT)while (sqlite3_step(sqlStatement)==SQLITE_ROW) {                    let contact:Person = Person()                                       let raw:UnsafePointer = sqlite3_column_blob(sqlStatement, 3);                    let rawLen:Int32 = sqlite3_column_bytes(sqlStatement, 3);                    let data:Data = Data(bytes: raw, count: Int(rawLen))                                        //Convert the binary data into an UIImage                    contact.avatar = UIImage(data: data)!                    imageArr.append(contact.avatar)                                    }            }                    }       return imageArr    }