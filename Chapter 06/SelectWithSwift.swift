class SelectWithSwift: NSObject {    var dbPath:URL = URL()    let db:COpaquePointer?=nil    let sqlite3_stmt:COpaquePointer?=nil       override init() {        let dirManager = FileManager.default()        do {            let directoryURL = try dirManager.urlForDirectory(FileManagerSearchPathDirectory.documentDirectory, in FileManager.SearchPathDomainMask.UserDomainMask, appropriateFor: nil, create: true)                        dbPath = try! directoryURL.appendingPathComponent("Contacts.sqlite")                    } catch let err as NSError {            print("Error: \(err.domain)")        }    }        func simpleSelect(){        var contactList = [Person]()        let sql:String = "Select id, name, address, city, zip,country from contact"                if(sqlite3_open(dbPath.path!, &db)==SQLITE_OK){            if(sqlite3_prepare_v2(db, sql.cString (using:String.Encoding.utf8)!, -1, &sqlStatement,  nil) == SQLITE_OK)            {                while (sqlite3_step(sqlStatement)==SQLITE_ROW) {                    let contact:Person = Person()                    contact.name = String(cString:UnsafePointer<Int8>(sqlite3_column_text(sqlStatement, 0)))!                    contact.address = String(cString:UnsafePointer<Int8>(sqlite3_column_text(sqlStatement, 1)))!                    contact.city = String(cString:UnsafePointer<Int8>(sqlite3_column_text(sqlStatement, 2)))!                    contact.zip = String(cString:UnsafePointer<Int8>(sqlite3_column_text(sqlStatement, 3)))!                    contact.country = String(cString:UnsafePointer<Int8>(sqlite3_column_text(sqlStatement, 4)))!contactList.append(contact)                                    }}        }        sqlite3_finalize(sqlStatement);        sqlite3_close(db);    }func SelectWhereContactInformation(){        var contactList = [Person]()        if(sqlite3_open(dbPath.path!, &db)==SQLITE_OK){            let sql:String = "Select id, name, address, city, zip,country from contact where name=?";            if(sqlite3_prepare_v2(db, sql, -1, &sqlStatement,  nil) == SQLITE_OK)            {                // input value for the WHERE clause unless you are                sqlite3_bind_text(sqlStatement, 0, sql, -1, nil);                                //Bind each column in the table to the property names                //for the contact object.                while (sqlite3_step(sqlStatement)==SQLITE_ROW) {                    let contact:Person = Person()                    contact.name = String(cString: UnsafePointer<Int8>(sqlite3_column_text(sqlStatement, 0)))!                    contact.address = String(cString: UnsafePointer<Int8>(sqlite3_column_text(sqlStatement, 1)))!                    contact.city = String(cString: UnsafePointer<Int8>(sqlite3_column_text(sqlStatement, 2)))!                    contact.zip = String(cString: UnsafePointer<Int8>(sqlite3_column_text(sqlStatement, 3)))!                    contact.country = String(cString: UnsafePointer<Int8>(sqlite3_column_text(sqlStatement, 4)))!                    contactList.append(contact)                }            }}        sqlite3_finalize(sqlStatement);    sqlite3_close(db);    } 


